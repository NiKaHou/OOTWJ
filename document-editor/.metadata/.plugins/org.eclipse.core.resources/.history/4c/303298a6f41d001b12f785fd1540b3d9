import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.Base64;
import java.util.List;

import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.ToolBar;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.AnchorPane;
import javafx.scene.web.HTMLEditor;
import javafx.scene.web.WebView;
import javafx.stage.FileChooser;

public class MainPage{
	@FXML
	private AnchorPane mainPane;
	@FXML
	private HTMLEditor htmlEditor;
	@FXML
	public void initialize() {
		initEditorPane();
		initEditorToolBar();
	}
	private void initEditorPane() {
		WebView webView = (WebView) htmlEditor.lookup(".web-view");
		webView.setPrefSize(0, 900);
		htmlEditor.setOnKeyReleased(EventHandler -> {
			System.out.println("asd");
		});
	}
	private void initEditorToolBar() {
		ToolBar toolBar = (ToolBar)htmlEditor.lookup(".top-toolbar");
		ImageView graphic = new ImageView(
				new Image("img/add-img.png",16,16,true,true)
				);
		Button insertImgBtn = new Button("", graphic);
		toolBar.getItems().add(insertImgBtn);
		insertImgBtn.setOnAction(event -> {
		try {
			onImportImgButtonAction();
		} catch (IOException e) {
			e.printStackTrace();
		}
		});
	}
	
	private void onImportImgButtonAction() throws IOException {
		FileChooser fileChooser = new FileChooser();
		List<String> extensionsList = new ArrayList<String>();
		extensionsList.add("png");
		extensionsList.add("jpg");
		fileChooser.setSelectedExtensionFilter(new FileChooser.ExtensionFilter("only (png/jpg)", extensionsList));
		File selectedFile = fileChooser.showOpenDialog(htmlEditor.getScene().getWindow());
		if (selectedFile != null) {
			String typeString = Files.probeContentType(selectedFile.toPath());
			@SuppressWarnings("resource")
			FileInputStream fileInputStream = new FileInputStream(selectedFile);
			byte[] bytes = new byte[(int)selectedFile.length()];
			fileInputStream.read(bytes);
			String base64 = new String(Base64.getEncoder().encodeToString(bytes));
			String htmlImg = String.format("<img src=\'%s\' />", "data:"+typeString+";base64,"+base64);

			htmlImg = htmlImg.replace("\\", "\\\\")
					.replace("\"", "\\\"")
					.replace("\r", "\\r")
					.replace("\n", "\\n");
			
			String script = String.format(
	                "(function(html) {"
	                + "  var sel, range;"
	                + "  if (window.getSelection) {"
	                + "    sel = window.getSelection();"
	                + "    if (sel.getRangeAt && sel.rangeCount) {"
	                + "      range = sel.getRangeAt(0);"
	                + "      range.deleteContents();"
	                + "      var el = document.createElement(\"div\");"
	                + "      el.innerHTML = html;"
	                + "      var frag = document.createDocumentFragment(),"
	                + "        node, lastNode;"
	                + "      while ((node = el.firstChild)) {"
	                + "        lastNode = frag.appendChild(node);"
	                + "      }"
	                + "      range.insertNode(frag);"
	                + "      if (lastNode) {"
	                + "        range = range.cloneRange();"
	                + "        range.setStartAfter(lastNode);"
	                + "        range.collapse(true);"
	                + "        sel.removeAllRanges();"
	                + "        sel.addRange(range);"
	                + "      }"
	                + "    }"
	                + "  }"
	                + "  else if (document.selection && "
	                + "           document.selection.type != \"Control\") {"
	                + "    document.selection.createRange().pasteHTML(html);"
	                + "  }"
	                + "})(\"%s\");", htmlImg);
			
			WebView webView = (WebView) htmlEditor.lookup(".web-view");
			webView.getEngine().executeScript(script);
		}
	}

	
}
